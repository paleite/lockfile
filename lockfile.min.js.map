{"version":3,"sources":["lockfile.js"],"names":[],"mappings":"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","file":"lockfile.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fs = require('mz/fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _os = require('os');\n\nvar _os2 = _interopRequireDefault(_os);\n\nvar _md = require('md5');\n\nvar _md2 = _interopRequireDefault(_md);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Sets up the Lockfile-object\n * @class\n * @classdesc A class to automatically read/write lockfiles.\n */\nvar Lockfile = function () {\n  /**\n   * Constructor\n   * @param {string} name A name to use as a basis for the lockfile. (optional)\n   */\n  function Lockfile() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _fs2.default.realpathSync('.');\n\n    _classCallCheck(this, Lockfile);\n\n    this.lockfile = _path2.default.resolve(_os2.default.tmpdir(), (0, _md2.default)(_path2.default.normalize(name)) + '.lock');\n  }\n\n  /**\n   * Create the lock\n   * @param {boolean} force Force the class to create a lock.\n   * @returns {Promise} Promise object represents whether locking was successful or not\n   */\n\n\n  _createClass(Lockfile, [{\n    key: 'lock',\n    value: function lock() {\n      var _this = this;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (force) {\n        return this.writeLockfile();\n      }\n\n      return this.isAvailable().then(function () {\n        return _this.writeLockfile();\n      });\n    }\n\n    /**\n     * Remove the lock\n     * @returns {Promise} Promise object represents whether unlocking was successful or not\n     */\n\n  }, {\n    key: 'unlock',\n    value: function unlock() {\n      return this.unlinkLockfile();\n    }\n\n    /**\n     * Check if the lockfile is available (i.e. doesn't already exist)\n     * @returns {Promise} Promise object represents whether the lockfile is available or not\n     */\n\n  }, {\n    key: 'isAvailable',\n    value: function isAvailable() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _fs2.default.exists(_this2.lockfile).then(function (exists) {\n          if (exists) {\n            reject(new Error('Lockfile already exists: ' + _this2.lockfile));\n            return;\n          }\n          resolve();\n        });\n      });\n    }\n\n    /**\n     * Write the lockfile to disk\n     * @returns {Promise} Promise object represents whether writing the lockfile was successful or not\n     */\n\n  }, {\n    key: 'writeLockfile',\n    value: function writeLockfile() {\n      return _fs2.default.writeFile(this.lockfile, '');\n    }\n\n    /**\n     * Unlink the lockfile from disk\n     * @returns {Promise} Promise object represents whether unlinking was successful or not\n     */\n\n  }, {\n    key: 'unlinkLockfile',\n    value: function unlinkLockfile() {\n      return _fs2.default.unlink(this.lockfile);\n    }\n  }]);\n\n  return Lockfile;\n}();\n\nexports.default = Lockfile;\n"]}